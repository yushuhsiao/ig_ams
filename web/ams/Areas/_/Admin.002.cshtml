@using jqx
@using ams
@using ams.Controllers;
@{
    Layout = "../Shared/_Layout2.cshtml";
    ViewBag.Title = "Corp";
}
@section head {
    @Bundles.RenderStyles(this, null, false)
    @Bundles.RenderScripts(this, null, false)
    <script type="text/javascript">
        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {

            var _corpMode = $scope._corpMode = {
                source: [@Html.Raw(json.SerializeObject(LangItem.GetEnum<CorpMode>(0, (n1, n2) => new { name = n2, value = (int)n1 })))][0],
                get_name: function (value) {
                    for (var i = 0; i < this.source.length; i++) {
                        if (this.source[i].value == value)
                            return this.source[i].name;
                    }
                    return null;
                },
                cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties) {
                    var n = _corpMode.get_name(value);
                    if (n == null) return defaulthtml;
                    return this.owner._defaultcellsrenderer(n, this);
                }
            };

            $scope.addRow = function () {
                for (var id = '@UserID.corp_min', id_max = '@UserID.corp_max'; id < id_max; id++) {
                    var row = $scope.grid1.getrowdatabyid(id);
                    if (row == null) {
                        $scope.grid1.extobj.addRow(id, {
                            UserName: 'ig' + id,
                            Mode: '@((int)CorpMode.Mode1)',
                            Currency: '@(CurrencyCode.TWD)',
                            Password1: 'aaa',
                            Password2: 'aaa',
                            User01R: 'Data Source=db01;Initial Catalog=ams_user;Persist Security Info=True;User ID=sa;Password=sa',
                            User01W: 'Data Source=db01;Initial Catalog=ams_user;Persist Security Info=True;User ID=sa;Password=sa'
                        });
                        return;
                    }
                }
            };

            $scope.grid1_opts = {
                events: {
                    //'*': function (event) { console.log(event.type, event); },
                    //initialized: function (event) { },
                    rowselect: function (event) {
                        //$scope.active_row = event.owner.extobj.getSelectedRow();
                        $scope.$applyAsync();
                    },
                    bindingcomplete: function (event) {
                        event.owner.extobj.reset()
                        event.owner.selectrow(0)
                        event.owner.focus()
                        $scope.$applyAsync();
                    },
                },
                ext: {
                    grps: [],
                    addrow: function (row, commit, finish) {
                        if (row.Password1 === row.Password2)
                            row.Password = row.Password1;
                        else return false;
                        $.invoke_api({
                            data: row,
                            url: '@(Url.GetActionUrlContent<CorpAccountApiController>("add"))',
                            success: function (data, textStatus, jqXHR) {
                                commit(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                var data = jqXHR.responseJSON;
                                if (data != null) {
                                    if (data.hasOwnProperty('Data') && data.hasOwnProperty('Status')) {
                                    }
                                }
                                console.log('');
                            },
                            complete: finish//function (jqXHR, textStatus) { }
                        })
                    },
                    updaterow: function (rowid, grp, grpdata, commit, finish) {
                        $.invoke_api({
                            data: grpdata,
                            url: '@(Url.GetActionUrlContent<CorpAccountApiController>("set"))',
                            success: function (data, textStatus, jqXHR) {
                                commit(data);
                                @*if (data.Status == '@((int)Status.Success)')
                                    commit(data.Data);
                                else if (data.Status == '@((int)Status.InvalidParameter)') {
                                }*@
                            },
                            complete: function () {
                                $scope.$applyAsync();
                                finish();
                            }
                        })
                    },
                    loadrow: function (rowid, grp, onload, finish) {
                        onload({});
                    }
                },
                source: {
                    //addrow: function (rowid, rowdata, position, commit) {
                    //    console.log('addrow', arguments);
                    //    commit(true);
                    //},
                    //deleterow: function (rowid, commit) {
                    //    console.log('deleterow', arguments);
                    //    commit(true);
                    //},
                    //updaterow: function (rowid, newdata, commit) {
                    //    console.log('updaterow', arguments);
                    //    commit(true);
                    //},
                },
                columns: [{ name: 'Mode', cellsrenderer: _corpMode.cellsrenderer }],
            };

            $scope.CorpMode_opts = { source: _corpMode.source }
        });
    </script>
}
@section toolbar {
    <div class="pull-left" @(new jqxButton { }) ng-click="addRow()"><i class="fa fa-fw fa-plus"></i>@lang["Add"]</div>
    <div class="pull-left" @(new jqxButton { }) ng-click="grid1.updatebounddata('data')"><i class="fa fa-fw fa-refresh"></i>@lang["Refresh"]</div>
}
@section grid {
    <div @(new jqxGrid { settings = "$scope.grid1_opts", instance = "$scope.grid1", row_numbers = true, pageable = false, pagermode = pagermode.simple, filterable = true, sortable = true, server_sorting = true, editmode = editmode.selectedcell, selectionmode = selectionmode.singlerow, showfilterrow = false, showfiltermenuitems = false, server_filtering = true, source = { id = "ID", url = Url.GetActionUrlContent<CorpAccountApiController>("list") }, columns = new[] { new jqxGrid.column { name = "guid       ", _datafield = { name = "guid       ", type = "string" }, text = lang["guid       "], width = 100, hidden = true }, new jqxGrid.column { name = "ID         ", _datafield = { name = "ID         ", type = "number" }, text = lang["ID         "], width = 100 }, new jqxGrid.column { name = "ver        ", _datafield = { name = "ver        ", type = "number" }, text = lang["ver        "], width = 100, hidden = true }, new jqxGrid.column { name = "UserName   ", _datafield = { name = "UserName   ", type = "string" }, text = lang["UserName   "], width = 100 }, new jqxGrid.column { name = "DisplayName", _datafield = { name = "DisplayName", type = "string" }, text = lang["DisplayName"], width = 100, hidden = true }, new jqxGrid.column { name = "User01R    ", _datafield = { name = "User01R    ", type = "string" }, text = lang["User01R    "], width = 100, hidden = true }, new jqxGrid.column { name = "User01W    ", _datafield = { name = "User01W    ", type = "string" }, text = lang["User01W    "], width = 100, hidden = true }, new jqxGrid.column { name = "Mode       ", _datafield = { name = "Mode       ", type = "number" }, text = lang["Mode       "], width = 100, hidden = true }, new jqxGrid.column { name = "Active     ", _datafield = { name = "Active     ", type = "bool  " }, text = lang["Active     "], width = 050, columntype = columntype.checkbox }, new jqxGrid.column { name = "Depth      ", _datafield = { name = "Depth      ", type = "number" }, text = lang["Depth      "], width = 100, hidden = true }, new jqxGrid.column { name = "UserLevel  ", _datafield = { name = "UserLevel  ", type = "number" }, text = lang["UserLevel  "], width = 100, hidden = true }, new jqxGrid.column { name = "MaxDepth   ", _datafield = { name = "MaxDepth   ", type = "number" }, text = lang["MaxDepth   "], width = 100, hidden = true }, new jqxGrid.column { name = "MaxAgent   ", _datafield = { name = "MaxAgent   ", type = "number" }, text = lang["MaxAgent   "], width = 100, hidden = true }, new jqxGrid.column { name = "MaxAdmin   ", _datafield = { name = "MaxAdmin   ", type = "number" }, text = lang["MaxAdmin   "], width = 100, hidden = true }, new jqxGrid.column { name = "MaxMember  ", _datafield = { name = "MaxMember  ", type = "number" }, text = lang["MaxMember  "], width = 100, hidden = true }, new jqxGrid.column { name = "CreateTime ", datafield = "CreateTime", text = lang["CreateTime"], columntype = columntype.datetime }, new jqxGrid.column { name = "CreateUser ", _datafield = { name = "CreateUser", type = "number" }, text = lang["CreateUser"], width = 100 }, new jqxGrid.column { name = "ModifyTime ", datafield = "ModifyTime", text = lang["ModifyTime"], columntype = columntype.datetime }, new jqxGrid.column { name = "ModifyUser ", _datafield = { name = "ModifyUser", type = "number" }, text = lang["ModifyUser"], width = 100 }, } })>
    </div>
}
@* add form*@
<section class="container-fluid form-horizontal" ng-show="grid1.ext_sel.isNew">
    <div class="row">
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">General</h3></div>
                <div class="panel-body">
                    <div class="form-group form-group-sm">
                        <label class="col-sm-3 control-label">@lang["Corp ID"]</label>
                        <div class="col-sm-3"><input class="form-control" type="number" min="1" max="1000" ng-model="grid1.ext_sel[''].data.ID" ng-change="grid1.refreshGrid()"></div>
                    </div>
                    <div class="form-group form-group-sm">
                        <label class="col-sm-3 control-label">@lang["UserName"]</label>
                        <div class="col-sm-3"><input class="form-control" type="text" ng-model="grid1.ext_sel[''].data.UserName" ng-change="grid1.refreshGrid()"></div>
                    </div>
                    <div class="form-group form-group-sm">
                        <label class="col-sm-3 control-label">@lang["Password"]</label>
                        <div class="col-sm-3"><input class="form-control" type="password" ng-model="grid1.ext_sel[''].data.Password1"></div>
                        <label class="col-sm-3 control-label">@lang["Confirm"]</label>
                        <div class="col-sm-3"><input class="form-control" type="password" ng-model="grid1.ext_sel[''].data.Password2"></div>
                    </div>
                    <div class="form-group form-group-sm hidden">
                        <label class="col-sm-3 control-label">@lang["Mode"]</label>
                        <div class="col-sm-3">
                            <div class="form-control" ng-model="grid1.ext_sel[''].data.Mode" ng-change="grid1.refreshGrid()" @(new jqxDropDownList { settings = "$scope.CorpMode_opts", width = "90%", height = 18, displayMember = "name", valueMember = "value", animationType = animationType.none, autoDropDownHeight = true })></div>
                            @*<span class="help-block">
                                    <div class="alert alert-warning alert-dismissible" role="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <strong>Warning!</strong> Better check yourself, you're not looking too good.
                                    </div>
                                </span>*@
                        </div>
                        <div class="col-sm-9">
                            <span class="help-block">A block of help text that breaks onto a new line and may extend beyond one line.</span>
                        </div>
                    </div>
                    @*<div class="form-group form-group-sm has-warning has-feedback">
                            <label class="control-label col-sm-3" for="inputSuccess3">Input with success</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="inputSuccess3" aria-describedby="inputSuccess3Status">
                                <span class="glyphicon glyphicon-ok form-control-feedback" aria-hidden="true"></span>
                                <span id="inputSuccess3Status" class="sr-only">(success)</span>
                            </div>
                        </div>*@
                    @*<div class="form-group form-group-sm has-success has-feedback">
                            <label class="control-label col-sm-3" for="inputGroupSuccess2">Input group with success</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    <span class="input-group-addon">@@</span>
                                    <input type="text" class="form-control" id="inputGroupSuccess2" aria-describedby="inputGroupSuccess2Status">
                                </div>
                                <span class="glyphicon glyphicon-ok form-control-feedback" aria-hidden="true"></span>
                                <span id="inputGroupSuccess2Status" class="sr-only">(success)</span>
                            </div>
                        </div>*@
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">Connection Strings</h3></div>
                <div class="panel-body">
                    <div class="form-group form-group-sm">
                        <label class="col-sm-3 control-label">@lang["User01 (read)"]</label>
                        <div class="col-sm-9"><input class="form-control" type="text" ng-model="grid1.ext_sel[''].data.User01R"></div>
                    </div>
                    <div class="form-group form-group-sm">
                        <label class="col-sm-3 control-label">@lang["User01 (write)"]</label>
                        <div class="col-sm-9"><input class="form-control" type="text" ng-model="grid1.ext_sel[''].data.User01W"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="form-group form-group-sm">
                        <div class="col-sm-3 col-sm-offset-3"><button class="form-control" ng-click="grid1.ext_sel[''].endEdit(true)">@lang["Save"]</button></div>
                        <div class="col-sm-3 col-sm-offset-0"><button class="form-control" ng-click="grid1.ext_sel[''].endEdit(false)">@lang["Cancel"]</button></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@* view & edit form *@
<section class="container-fluid form-horizontal" ng-hide="grid1.ext_sel.isNew">
    <ul class="nav nav-pills">
        <li class="active"><a href="" data-toggle="tab" data-target=".tab1">@lang["General"]</a></li>
        @*<li><a href="" data-toggle="tab" data-target=".tab2">@lang["Config"]</a></li>*@
        @*<li><a href="" data-toggle="tab" data-target=".tab3">@lang["Agent Settings"]</a></li>*@
        @*<li><a href="" data-toggle="tab" data-target=".tab4">@lang["Admin Settings"]</a></li>*@
        @*<li><a href="" data-toggle="tab" data-target=".tab5">@lang["Member Settings"]</a></li>*@
    </ul>
    <div class="tab-content">
        <div class="tab1 row tab-pane fade in active">
            <div class="col-sm-6">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-3 control-label">@lang["Corp ID"]</label>
                            <div class="col-sm-3"><input class="form-control" value="{{grid1.ext_sel[''].data.ID}}" readonly /></div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-3 control-label">@lang["UserName"]</label>
                            <div class="col-sm-3"><input class="form-control" value="{{grid1.ext_sel[''].data.UserName}}" readonly /></div>
                        </div>
                        <div class="form-group form-group-sm hidden">
                            <label class="col-sm-3 control-label">@lang["Mode"]</label>
                            <div class="col-sm-3"><input class="form-control" value="{{_corpMode.get_name(grid1.ext_sel[''].data.Mode)}}" readonly /></div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-3 control-label">@lang["Active"]</label>
                            <div class="col-sm-3">
                                <div ng-show="grid1.ext_sel[''].isEditing" ng-model="grid1.ext_sel[''].data.Active" ng-change="grid1.refreshGrid()" @(new jqxSwitchButton { animationEnabled = false })></div>
                                <div ng-hide="grid1.ext_sel[''].isEditing" ng-model="grid1.ext_sel[''].data.Active" @(new jqxSwitchButton { animationEnabled = false, disabled = true })></div>
                            </div>
                        </div>
                        <div class="form-group form-group-sm">
                            <div class="col-sm-9 col-sm-offset-3">
                                <button class="col-sm-3 btn btn-sm btn-default" ng-hide="grid1.ext_sel[''].isEditing" ng-click="grid1.ext_sel[''].beginEdit()">@lang["Edit"]</button>
                                <button class="col-sm-3 btn btn-sm btn-default" ng-show="grid1.ext_sel[''].isEditing" ng-click="grid1.ext_sel[''].endEdit(true)">@lang["Save"]</button>
                                <button class="col-sm-3 btn btn-sm btn-default" ng-show="grid1.ext_sel[''].isEditing" ng-click="grid1.ext_sel[''].endEdit(false)">@lang["Cancel"]</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group form-group-sm">
                            <label class="col-sm-3 control-label">@lang["User01 (read)"]</label>
                            <div class="col-sm-9">
                                <input class="form-control" ng-hide="grid1.ext_sel[''].isEditing" ng-model="grid1.ext_sel[''].data.User01R" readonly>
                                <input class="form-control" ng-show="grid1.ext_sel[''].isEditing" ng-model="grid1.ext_sel[''].data.User01R" type="text">
                            </div>
                        </div>
                        <div class="form-group form-group-sm">
                            <label class="col-sm-3 control-label">@lang["User01 (write)"]</label>
                            <div class="col-sm-9">
                                <input class="form-control" ng-hide="grid1.ext_sel[''].isEditing" ng-model="grid1.ext_sel[''].data.User01W" readonly>
                                <input class="form-control" ng-show="grid1.ext_sel[''].isEditing" ng-model="grid1.ext_sel[''].data.User01W" type="text">
                            </div>
                        </div>
                        @*<div class="form-group form-group-sm">
                                <div class="col-sm-9 col-sm-offset-3">
                                    <button class="col-sm-3 btn btn-sm btn-default" ng-hide="grid1.ext_sel[''].isEditing" ng-click="grid1.ext_sel[''].beginEdit()">@lang["Edit"]</button>
                                    <button class="col-sm-3 btn btn-sm btn-default" ng-show="grid1.ext_sel[''].isEditing" ng-click="grid1.ext_sel[''].endEdit(true)">@lang["Save"]</button>
                                    <button class="col-sm-3 btn btn-sm btn-default" ng-show="grid1.ext_sel[''].isEditing" ng-click="grid1.ext_sel[''].endEdit(false)">@lang["Cancel"]</button>
                                </div>
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="tab2 row tab-pane fade">
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">2</div></div></div>
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">2</div></div></div>
        </div>
        <div class="tab3 row tab-pane fade">
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">3</div></div></div>
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">3</div></div></div>
        </div>
        <div class="tab4 row tab-pane fade">
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">4</div></div></div>
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">4</div></div></div>
        </div>
        <div class="tab5 row tab-pane fade">
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">5</div></div></div>
            <div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">5</div></div></div>
        </div>
    </div>
</section>
