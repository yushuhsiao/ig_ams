@using jqx
@using ams
@using ams.Controllers;
@{
    Layout = "../Shared/_Layout2.cshtml";
    ViewBag.Title = "Agents";
    jqxGridSettings grid_config = new jqxGridSettings
    {
        page = this,
        scope_id = "grid1",
        scope_prop = "sel_row",
        row_numbers = true,
        source = { id = "ID", url = Url.GetActionUrlContent<CorpAccountApiController>("list"), },
        pageable = false,
        pagermode = pagermode.simple,
        filterable = true,
        sortable = true,
        server_sorting = true,
        editmode = editmode.selectedcell,
        selectionmode = selectionmode.singlerow,
        showfilterrow = false,
        showfiltermenuitems = false,
        server_filtering = true,
        selectedrowindex = 0,
        columns = new[] {
            new jqxGrid.column { _datafield = { name = "ID         ", type = "number" }, text = lang["Corp ID    "], width = 100 },
            new jqxGrid.column { _datafield = { name = "ver        ", type = "number" }, text = lang["ver        "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "UserName   ", type = "string" }, text = lang["Corp Name  "], width = 100 },
            new jqxGrid.column { _datafield = { name = "DisplayName", type = "string" }, text = lang["DisplayName"], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "User01R    ", type = "string" }, text = lang["User01R    "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "User01W    ", type = "string" }, text = lang["User01W    "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "Active     ", type = "bool  " }, text = lang["Active     "], width = 050, columntype = columntype.checkbox },
            new jqxGrid.column { _datafield = { name = "Mode       ", type = "string" }, text = lang["Mode       "], width = 100, hidden = false , name="Mode", },
            new jqxGrid.column { _datafield = { name = "Currency   ", type = "string" }, text = lang["Currency   "], width = 100, hidden = false },
            new jqxGrid.column { _datafield = { name = "Depth      ", type = "number" }, text = lang["Depth      "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "UserLevel  ", type = "number" }, text = lang["UserLevel  "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "MaxDepth   ", type = "number" }, text = lang["MaxDepth   "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "MaxAgent   ", type = "number" }, text = lang["MaxAgent   "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "MaxAdmin   ", type = "number" }, text = lang["MaxAdmin   "], width = 100, hidden = true },
            new jqxGrid.column { _datafield = { name = "MaxMember  ", type = "number" }, text = lang["MaxMember  "], width = 100, hidden = true },
            jqxColumnsHelper.CreateTime(this), jqxColumnsHelper.CreateUser(this), jqxColumnsHelper.ModifyTime(this), jqxColumnsHelper.ModifyUser(this)
        }
    };
}
@section head {
    @Bundles.RenderStyles(this, null, false)
    @Bundles.RenderScripts(this, null, false)
    <script type="text/javascript">
        @*var _CorpMode = [@Html.JsonRaw(LangItem.GetEnum<CorpMode>(null, null))][0];*@

        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {

            @*$scope.CorpMode_opts = { source: _CorpMode }*@

            $scope.addRow = function () {
                for (var id = '@UserID.corp_min', id_max = '@UserID.corp_max'; id < id_max; id++) {
                    var row = $scope.grid1.getrowdatabyid(id);
                    if (row == null) {
                        $scope.grid1.ext.addRow(id, {
                            UserName: 'ig' + id,
                            Mode: '@CorpMode.Mode1',
                            Currency: '@CurrencyCode.TWD',
                            Password1: 'aaa',
                            Password2: 'aaa',
                            User01R: 'Data Source=db01;Initial Catalog=ams_user;Persist Security Info=True;User ID=sa;Password=sa',
                            User01W: 'Data Source=db01;Initial Catalog=ams_user;Persist Security Info=True;User ID=sa;Password=sa'
                        });
                        return;
                    }
                }
            };

            window.$grid1 = $scope['@grid_config.scope_id'] = $('#_grid1').jqxGridEx($.n(@grid_config), {
                $scope: $scope,
                columns: [
                    //{ name: 'Mode    ', translate: { source: _CorpMode }, },
                    //{ name: 'Currency', translate: { source: _Currency }, },
                ],
                source: {
                    datafields: [
                    ]
                    //addrow: function (rowid, rowdata, position, commit) {
                    //    console.log('addrow', arguments);
                    //    commit(true);
                    //},
                    //deleterow: function (rowid, commit) {
                    //    console.log('deleterow', arguments);
                    //    commit(true);
                    //},
                    //updaterow: function (rowid, newdata, commit) {
                    //    console.log('updaterow', arguments);
                    //    commit(true);
                    //},
                },
                ext: {
                    grps: ['aaa', 'bbb'],
                    //add_url: '@(Url.GetActionUrlContent<CorpAccountApiController>("add"))',
                    //update_url: '@(Url.GetActionUrlContent<CorpAccountApiController>("set"))',
                    OnAddRow: function (data, jqXHR, settings) {
                        if (row.Password1 === row.Password2)
                            row.Password = row.Password1;
                        else return false;
                        settings.url = '@(Url.GetActionUrlContent<CorpAccountApiController>("add"))';
                    },
                    OnUpdateRow: function (rowid, grp, grpdata, jqXHR, settings) {
                        settings.url = '@(Url.GetActionUrlContent<CorpAccountApiController>("set"))';
                    },
                    OnLoadRow: function (rowid, grp, onload, finish) {
                        onload({});
                    }
                },
                event: {
                    //'*': function (event) {
                    //    console.log(event.type, event);
                    //},
                    //initialized: function (event) {
                    //    $scope.active_row = event.owner.extobj.getSelectedRow();
                    //    $scope.$applyAsync();
                    //},
                    rowselect: function (event) {
                    },
                    bindingcomplete: function (event) {
                        //    event.owner.extobj.reset()
                        event.owner.selectrow(0)
                        //event.owner.focus()
                        //    $scope.$applyAsync();
                    },
                },
            });
        });
    </script>
}
@section toolbar {
    <div class="pull-left" @(new jqxButton { }) ng-click="addRow()"><i class="fa fa-fw fa-plus"></i>@lang["Add"]</div>
    <div class="pull-left" @(new jqxButton { }) ng-click="grid1.updatebounddata('data')"><i class="fa fa-fw fa-refresh"></i>@lang["Refresh"]</div>
}
@section grid {
    @*<div @(new jqxGrid { settings = "grid1_opts", instance = "grid1" })></div>*@
    <div id="_grid1"></div>
}
<section class="container-fluid form-horizontal" ng-show="sel_row.isNew">
    <div class="row">
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">@lang["General"]</h3></div>
                <div class="panel-body">
                    @FormHelper.number_input_ww(" ", grid_config, "ID       ", min: 1, max: 1000)
                    @FormHelper.text_input_ww("   ", grid_config, "UserName ")
                    @FormHelper.password2_ww("    ", grid_config, "Password1", lang["Password"], "Password2", lang["Confirm"])
                    @FormHelper.dropdownlist_ww(" ", grid_config, "Mode     ", width: 4, source: LangItem.GetEnums(null, CorpMode.Root))
                    @FormHelper.Currency_ww("     ", grid_config, "Currency ")
                    @FormHelper.switch_button_ww("", grid_config, "Active   ")
                    @FormHelper.commands_add(grid_config)
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">@lang["Connection Strings"]</h3></div>
                <div class="panel-body">
                    @FormHelper.text_input_ww("", grid_config, "User01R", width: 8)
                    @FormHelper.text_input_ww("", grid_config, "User01W", width: 8)
                </div>
            </div>
        </div>
    </div>
    <div class="row hidden">
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    </div>
</section>
<section class="container-fluid form-horizontal" ng-hide="sel_row.isNew">
    <ul class="nav nav-pills">
        <li class="active"><a href="" data-toggle="tab" data-target=".tab1">@lang["General"]</a></li>
        <li class="hidden"><a href="" data-toggle="tab" data-target=".tab2">@lang["Config"]</a></li>
        <li class="hidden"><a href="" data-toggle="tab" data-target=".tab3">@lang["Agent Settings"]</a></li>
        <li class="hidden"><a href="" data-toggle="tab" data-target=".tab4">@lang["Admin Settings"]</a></li>
        <li class="hidden"><a href="" data-toggle="tab" data-target=".tab5">@lang["Member Settings"]</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab1 row tab-pane fade in active">
            <div class="col-sm-6">
                <div class="panel panel-default">
                    <div class="panel-body">
                        @FormHelper.text_box("        ", grid_config, "ID       ")
                        @FormHelper.text_box("        ", grid_config, "UserName ")
                        @FormHelper.text_box("        ", grid_config, "Mode     ", width: 4)
                        @FormHelper.text_box("        ", grid_config, "Currency ", width: 4)
                        @FormHelper.switch_button_rw("", grid_config, "Active   ")
                        @FormHelper.commands_edit(grid_config)
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="panel panel-default">
                    <div class="panel-body">
                        @FormHelper.text_input_rw("", grid_config, "User01R")
                        @FormHelper.text_input_rw("", grid_config, "User01W")
                    </div>
                </div>
            </div>
        </div>
        <div class="tab2 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">2</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">2</div></div></div></div>
        <div class="tab3 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">3</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">3</div></div></div></div>
        <div class="tab4 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">4</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">4</div></div></div></div>
        <div class="tab5 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">5</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">5</div></div></div></div>
    </div>
</section>
