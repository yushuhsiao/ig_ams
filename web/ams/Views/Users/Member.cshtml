@using jqx
@using ams
@using ams.Data
@using ams.Controllers;
@{
    popups.dialog modal_dialog = new popups.dialog(this, "_modal1");
    ViewBag.Title = "Members";
    jqxGrid grid = new jqxGrid<MemberData>
    {
        page = this,
        scope_id = "grid1",
        showtoolbar = "#toolbar",
        source = { id = "ID", url = Url.GetActionUrl<MemberAccountApiController>("list"), datafields = new[] { new jqxGrid.datafield { name = "Balance" } } },
        pager = { pageable = true, server_paging = true, pagermode = pagermode.simple },
        filter = { filterable = true, server_filtering = true, showfilterrow = true, showfiltermenuitems = false, },
        sorting = { sortable = true, server_sorting = true, },
        //editmode = editmode.selectedcell,
        selectionmode = selectionmode.singlerow,
        //selectedrowindex = 1,
        columns = new[] {
            new jqx_column.ActionPopup(this, "_popup1") { ButtonText = "Details", modal = modal_dialog, cellsalign = alignment.center },
            new jqx_column.ver(this),
            new jqx_column.ID1(this, "ID") { text = lang["Member ID   "] },
            new jqx_column.CorpID(this),
            new jqx_column.CorpName(this),
            new jqx_column.ParentID(this) { hidden = true },
            new jqx_column.ParentName(this),
            new jqx_column.Depth(this),
            new jqx_column.UserName(this),
            new jqx_column.NickName(this),
            new jqxGrid._column { _datafield = { name = "Active      ", type = dataFieldType._number }, text = lang["State       "], width = 050, hidden = true },
            new jqxGrid._column { _datafield = { name = "Active1     ", type = dataFieldType._bool__ }, text = lang["Active      "], width = 050, columntype = columntype.checkbox },
            new jqxGrid._column { _datafield = { name = "Active2     ", type = dataFieldType._bool__ }, text = lang["Game        "], width = 050, columntype = columntype.checkbox },
            new jqx_column.Amount(this, "TotalBalance",lang["TotalBalance"]),
            new jqx_column.Amount(this, "Balance1    ",lang["Balance1    "]),
            new jqx_column.Amount(this, "Balance2    ",lang["Balance2    "]),
            new jqx_column.Amount(this, "Balance3    ",lang["Balance3    "]) { hidden = true },
            new jqx_column.CreateTime(this), new jqx_column.CreateUser(this), new jqx_column.ModifyTime(this), new jqx_column.ModifyUser(this),
        }
    };
    widgets.layout_1(this, grid);
}
@if (IsDetails)
{
    int corpID = Request.QueryString["CorpID"].ToInt32() ?? 0;
    int id = Request.QueryString["ID"].ToInt32() ?? 0;
    CorpInfo corp = CorpInfo.GetCorpInfo(corpID);
    MemberData row = ViewBag.row = corp.GetMemberData(id);
    popups.EditControl edit1 = new popups.EditControl(this, "edit1") { grid = grid, row = row, updaterow = true };
    popups.EditControl edit2 = new popups.EditControl(this, "edit2") { };
    popups.EditControl edit3 = new popups.EditControl(this, "edit3") { };
    popups.nav_tabs tabs = ViewBag.tabs = new popups.nav_tabs(
        new popups.tab("a") { body = () => tab1(edit1), title = lang["General"] },
        new popups.tab("b") { body = () => tab2(edit2), title = lang["Platform Accounts"] },
        new popups.tab("d") { body = () => tab4(), title = lang["Photo"] },
        new popups.tab("c") { body = () => tab3(edit3), title = lang["Black List"] });
    @tabs
    @section head {
        @popups.popup_css()
        @*<script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                $('@tabs["d"].selector').tab('show');
            });
        </script>*@
    }
    @helper tab1(popups.EditControl edit)
    {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                var edit1 = new $.EditControl($.n(@edit), {
                    update_url: '@(Url.GetActionUrl<MemberAccountApiController>("set"))',
                });
            });
        </script>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.TextBox("  ID         ")
                    @edit.TextBox("  CorpID     ")
                    @edit.TextBox("  ParentID   ")
                    @edit.TextBox("  UserName   ")
                    @edit.TextInput("NickName   ")
                    @edit.Active3(lang["State"], "", "", "Active1", "Active2")
                    @edit.Password2("Password1", lang["Password        "])
                    @edit.Password2("Password2", lang["Confirm Password"])
                    @edit.TextBox("  Depth      ", width: 3)
                    @edit.CommandsEdit()
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
}
    @helper tab2(popups.EditControl edit)
    {
popups.nav_tabs tabs = ViewBag.tabs;
    <script type="text/javascript">
        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
            var edit2 = new $.EditControl($.n(@edit), {
                OnUpdate: function (data, jqXHR, settings) {
                }
            });
            $('@tabs["b"].selector').on('show.bs.tab', function (e) {
            });
        });
    </script>
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-body">
            </div>
        </div>
    </div>
}
    @helper tab3(popups.EditControl edit)
    {
popups.nav_tabs tabs = ViewBag.tabs;
MemberData row = ViewBag.row;
CorpInfo corp = row.CorpInfo;
    <script type="text/javascript">
        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
            var edit3 = new $.EditControl($.n(@edit), {
                load_url: '@(Url.GetActionUrl<GeniusBull.GeniusBullUserApiController>("GetBlackList"))',
                OnLoading: function (data, jqXHR, settings) {
                    settings.data = {
                        CorpName: '@corp.UserName',
                        UserName: '@row.UserName',
                        PlatformName: edit3.PlatformName,
                    };
                },
            });
            edit3.DeleteItem = function (username) {
                $.invoke_api({
                    data:
                    {
                        CorpName: '@corp.UserName',
                        UserName: '@row.UserName',
                        PlatformName: edit3.PlatformName,
                        BlacklistName: username
                    },
                    url: '@(Url.GetActionUrl<GeniusBull.GeniusBullUserApiController>("RemoveBlackList"))',
                    success: function (data, textStatus, jqXHR) {
                        if ($.isArray(edit3.Row)) {
                            for (var i = 0; i < edit3.Row.length; i++)
                                if (edit3.Row[i].JackpotType == data.JackpotType)
                                    edit3.Row[i] = data;
                        }
                        edit3.LoadData(true);
                        //$scope.$applyAsync();
                    }
                });
                //console.log(arguments);
                //edit3.LoadData(true);
            };
            @foreach(PlatformInfo p1 in PlatformInfo.Cache.Value) {
                    IG01PlatformInfo p2 = p1 as IG01PlatformInfo;
                    if (p2 != null) { <text> edit3.PlatformName = '@p2.PlatformName';</text> }
                    break;
                }
            $('@tabs["c"].selector').on('show.bs.tab', function (e) {
                edit3.LoadData();
            });
        });
    </script>
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label">Platform</label>
                        @foreach (PlatformInfo p1 in PlatformInfo.Cache.Value)
                        {
                            IG01PlatformInfo p2 = p1 as IG01PlatformInfo;
                            if (p2 != null)
                            {
                                <label>
                                    <input type="radio" name="@_id["opt" + edit.name]" value="@p2.PlatformName" ng-model="@(edit.name).PlatformName">
                                    @p2.PlatformName
                                </label>
                            }
                        }
                    </div>
                </div>
                @*(@edit.name).Row*@
                <div class="col-xs-3">
                    <div class="input-group" ng-repeat="n in (@edit.name).Row">
                        <input type="text" readonly class="form-control" value="{{n.BlacklistName}}" />
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button" ng-click="(@edit.name).DeleteItem(n.BlacklistName)"><i class="fa fa-fw fa-close"></i></button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
    @helper img(string title, string img_url = null, string delete = null)
    {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @if (!string.IsNullOrEmpty(delete))
                    { <a href="" class="" ng-click="@delete"><i class="fa fa-fw fa-close"></i></a> }
                    @title
                </div>
                <div class="panel-body">
                    <img src="@img_url" class="img_api img-thumbnail" style="width: auto; height: 200px;" />
                </div>
            </div>
        </div>
}
    @helper tab4()
    {
IG01PlatformInfo p = IG01PlatformInfo.PokerInstance;
MemberData member = ViewBag.row;
IG01MemberPlatformData member_p = p.GetMember(member);
var urls = RecogService.PhotoApiController.GetImageUrl(member.CorpName, member.UserName, null);
    <script type="text/javascript">
        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
            $scope.ReloadImage = function () {
                window.location.reload();
            };
            $scope.DeleteImage1 = function (imgKey) {
                // /deleteImage/recog/"id"
                $.invoke_api({
                    data: { CorpName: '@member.CorpInfo.UserName', UserName: '@member.UserName', ImageKey: imgKey },
                    url: '@(Url.GetActionUrl<RecogService.PhotoApiController>("deleteImage"))',
                    success: function (data, textStatus, jqXHR) {
                        $scope.ReloadImage();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(arguments);
                    },
                });
            };
        });
    </script>
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div style="padding-bottom: 1em;">
                    <div class="btn btn-sm btn-default" ng-click="ReloadImage()">Reload</div>
                    <form style="display: inline-block;" action="http://game3.betis73168.com:7001/PhotoTest/PhotoCheck" method="post" target="_blank">
                        @*/recog*@
                        <input type="hidden" name="corpname" value="@member.CorpInfo.UserName" />
                        <input type="hidden" name="username" value="@member.UserName"/>
                        <button type="submit" class="btn btn-sm btn-default" title="進大廳前拍照，確認本人與註冊照片是否相符">PhotoCheck</button>
                    </form>
                    <form style="display: inline-block;" action="http://game3.betis73168.com:7001/PhotoTest/PhotoVerify" method="post" target="_blank">
                        @*/submitActionSample*@
                        <input type="hidden" name="corpname" value="@member.CorpInfo.UserName" />
                        <input type="hidden" name="username" value="@member.UserName" />
                        <button type="submit" class="btn btn-sm btn-default" title="註冊時拍照，需要比出正確手勢並由人工驗證">PhotoVerify</button>
                    </form>
                    <form style="display: inline-block;" action="http://game3.betis73168.com:7001/PhotoTest/PhotoCapture" method="post" target="_blank">
                        @*/submitSample*@
                        <input type="hidden" name="corpname" value="@member.CorpInfo.UserName" />
                        <input type="hidden" name="username" value="@member.UserName" />
                        <button type="submit" class="btn btn-sm btn-default" title="註冊時拍照，提供未來比對的樣本">PhotoCapture</button>
                    </form>
                </div>
                @*<div>@p.ImageApi()</div>*@
                @*<div>@Html.JsonRaw(m2)</div>*@
                @if (urls != null)
                {
                    <div class="img-api-div">
                        @*@img("最新一張視訊截圖", string.Format("{0}/getImage/{1}", p.ImageApi(), m2.AccessToken))*@
                        @img("註冊時的最新sample截圖", urls.sample, "DeleteImage1('sample')")
                        @img("辨識身分時傳送的截圖", urls.recog, "DeleteImage1('recog')")
                        @img("第1張擺POSE截圖", urls.action1, "DeleteImage1('action')")
                        @img("第2張擺POSE截圖", urls.action2, "DeleteImage1('action')")
                        @*@img("第3張擺POSE截圖", string.Format("{0}/getImage/action/{1}/{2}", p.ImageApi(), m2.Id, 3))*@
                    </div>
                }
            </div>
        </div>
    </div>
}
}
else
{
    popups.AddControl add = new popups.AddControl(this, grid);
    @section head {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                window.$grid1 = $scope['@grid.scope_id'] = $('#_grid1').jqxGridEx($.n(@grid), {
                    $scope: $scope,
                    columns: [{
                        name: '_popup1', get_url: function (data) {
                            return '@Url.Action("MemberDetails")?CorpID=' + data.CorpID + '&ID=' + data.ID;
                        },
                    }],
                });
                var add = new $.EditControl($.n(@add), {
                    OnCreate: function () {
                        return { CorpName: $grid1.getFilterValue("CorpName"), ParentName: '', UserName: '', NickName: '', Password1: '', Password2: '', Active1: true, Active2: false, };
                    },
                    OnUpdate: function (data, jqXHR, settings) {
                        if (data.Password1 === data.Password2)
                            data.Password = data.Password1;
                        settings.url = '@(Url.GetActionUrl<MemberAccountApiController>("add"))';
                    },
                    OnUpdateComplete: function (data, textStatus, jqXHR) {
                        $grid1.addrow(null, data, 'first');
                    },
                });
            });
        </script>
    }
    @helper tab_add(jqxGrid grid, popups.AddControl add)
    {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">@lang["General"]</h3></div>
                <div class="panel-body">
                    @add.TextBox("  CorpName   ", lang["CorpID           "])
                    @add.TextInput("ParentName ")
                    @add.TextInput("UserName   ")
                    @add.TextInput("NickName   ")
                    @add.Password(" Password1  ", lang["Password        "])
                    @add.Password(" Password2  ", lang["Confirm Password"])
                    @add.Active3(grid.GetColumn("Active").text, "", "", "Active1", "Active2")
                    @add.CommandsAdd()
                </div>
            </div>
        </div>
        <div class="col-sm-6 hidden">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">@lang[""]</h3></div>
                <div class="panel-body"></div>
            </div>
        </div>
}
    <div id="toolbar" class="hidden">
        @add.button()
        @toolbars.GridRefresh(grid)
    </div>
    <div id="_grid1"></div>
    @modal_dialog
    @add.modal(() => tab_add(grid, add))
}