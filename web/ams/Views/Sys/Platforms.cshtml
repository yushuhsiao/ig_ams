@using jqx
@using ams
@using ams.Data
@using ams.Controllers;
@using System.Reflection;
@using System.Configuration;
@using System.ComponentModel;
@{
    popups.dialog modal_dialog = new popups.dialog(this, "_modal1");
    ViewBag.Title = "Platforms";
    ViewBag.PanelBody = widgets.tran_size;
    jqxGrid grid = new jqxGrid<PlatformInfo>
    {
        page = this,
        scope_id = "grid1",
        showtoolbar = "#toolbar",
        source = { id = "ID", url = Url.GetActionUrl<PlatformsApiController>("list"), },
        //pager = { pageable = true, server_paging = true, pagermode = pagermode.simple },
        pager = { pagesize = 1000, pageable = true },
        filter = { filterable = true, server_filtering = true, showfilterrow = true, showfiltermenuitems = false, },
        sorting = { sortable = true, server_sorting = true, },
        //editmode = editmode.selectedrow,
        selectionmode = selectionmode.singlerow,
        //selectedrowindex = 0,
        columns = new jqxGrid._column[] {
            new jqx_column.ActionPopup(this, "_popup1") { ButtonText = "Details", modal = modal_dialog, cellsalign = alignment.center },
            new jqx_column.ID1(this) { text = lang["Platform ID"] },
            new jqx_column.ver(this),
            new jqx_column.PlatformName(this),
            new jqx_column.PlatformType(this),
            new jqx_column.Currency(this),
            new jqx_column._string(this, "Active") { text = lang["State        "] },
            new jqx_column.CreateTime(this), new jqx_column.CreateUser(this), new jqx_column.ModifyTime(this), new jqx_column.ModifyUser(this),
        }
    };
    widgets.layout_1(this, grid);
}
@if (IsDetails)
{
    PlatformInfo row = ViewBag.row = PlatformInfo.GetPlatformInfo(id: Request.QueryString.ToString().ToInt32() ?? 0);
    popups.EditControl edit1 = new popups.EditControl(this, "edit1") { grid = grid, row = row, updaterow = true };
    popups.EditControl edit2 = new popups.EditControl(this, "edit2") { };
    popups.EditControl edit3 = new popups.EditControl(this, "edit3") { };
    popups.EditControl edit4 = new popups.EditControl(this, "edit4") { };
    Func<popups.EditControl, HelperResult> tab4 = _null.noop<popups.EditControl, HelperResult>;
    if (row == null) { }
    else if (row.PlatformType == PlatformType.Main) { tab4 = tab4_Main; }
    else if (row.PlatformType == PlatformType.InnateGloryA) { tab4 = tab4_InnateGloryA; }
    else if (row.PlatformType == PlatformType.InnateGloryB) { tab4 = tab4_InnateGloryB; }
    else if (row.PlatformType == PlatformType.InnateGloryC) { tab4 = tab4_InnateGloryC; }
    popups.nav_tabs tabs = ViewBag.tabs = new popups.nav_tabs(
        new popups.tab("a") { body = () => tab1(edit1), title = lang["General"] },
        new popups.tab("d") { body = () => tab4(edit4), title = lang["Config"], },
        new popups.tab("b") { body = () => tab2(edit2), title = lang["Games"], },
        new popups.tab("c") { body = () => tab3(edit3), title = lang["JackpotConfig"], Visible = row.PlatformType == PlatformType.InnateGloryA });
    @tabs
    @section head {
        @popups.popup_css()
        <script type="text/javascript">
            //Object.defineProperty(window, "PlatformName", { get: function () { return '@row.PlatformName'; } });
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
            });
        </script>
    }
    @helper tab1(popups.EditControl edit)
    {
        <script type="text/javascript">
        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
            var edit1 = new $.EditControl($.n(@edit), {
                OnUpdate: function (data, jqXHR, settings) {
                    settings.url = '@(Url.GetActionUrl<PlatformsApiController>("set"))';
                }
            });
        });
        </script>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.TextBox("ID          ")
                    @edit.TextBox("PlatformType")
                    @edit.TextBox("PlatformName")
                    @edit.TextBox("Currency    ", width: 4)
                    @edit.PlatformActive("Active")
                    @edit.CommandsEdit()
                </div>
            </div>
        </div>
        <div class="col-sm-6 hidden">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab2(popups.EditControl edit)
    {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                var edit2 = new $.EditControl($.n(@edit), {
                    OnUpdate: function (data, jqXHR, settings) {
                        //settings.url = '@(Url.GetActionUrl<GeniusBull.GeniusBullSysApiController>("set"))';
                    }
                });
                $('@ViewBag.tabs["b"].selector').on('show.bs.tab', function (e) {
                    //edit2.LoadData();
                });
            });
        </script>
        <div class="col-sm-12 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab3(popups.EditControl edit)
    {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                var edit3 = new $.EditControl($.n(@edit), {
                    OnLoading: function (data, jqXHR, settings) {
                        data.PlatformName = '@ViewBag.row.PlatformName';
                        settings.url = '@(Url.GetActionUrl<GeniusBull.GeniusBullSysApiController>("GetJackpotConfigList"))';
                    },
                });
                function _procJackpotConfig(data, textStatus, jqXHR) {
                    if ($.isArray(edit3.Row)) {
                        for (var i = 0; i < edit3.Row.length; i++)
                            if (edit3.Row[i].JackpotType == data.JackpotType)
                                edit3.Row[i] = data;
                    }
                    $scope.$applyAsync();
                }
                $scope.SetJackpotConfig = function (row) {
                    $.invoke_api({
                        data: { PlatformName: '@ViewBag.row.PlatformName', JackpotRow: row },
                        url: '@(Url.GetActionUrl<GeniusBull.GeniusBullSysApiController>("SetJackpotConfig"))',
                        success: _procJackpotConfig
                    });
                }
                $scope.GetJackpotConfig = function (row) {
                    $.invoke_api({
                        data: { PlatformName: '@ViewBag.row.PlatformName', JackpotType: row.JackpotType },
                        url: '@(Url.GetActionUrl<GeniusBull.GeniusBullSysApiController>("GetJackpotConfig"))',
                        success: _procJackpotConfig
                    });
                }
                $('@ViewBag.tabs["c"].selector').on('show.bs.tab', function (e) {
                    edit3.LoadData();
                });
            });
        </script>
        <div class="col-sm-12 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <th></th>
                            <th></th>
                            <th>@lang["JackpotType"]</th>
                            <th>@lang["Ratio"]</th>
                            <th>@lang["Goal"]</th>
                            <th>@lang["Base"]</th>
                        </tr>
                        <tr ng-repeat="row in @(edit.name).Row" class="form-group-sm">
                            <td style="width: 1%; padding: 0;" class="text-nowrap"><div class="btn" ng-click="SetJackpotConfig(row)"><i class="fa fa-fw fa-save"></i>Update</div></td>
                            <td style="width: 1%; padding: 0;" class="text-nowrap"><div class="btn" ng-click="GetJackpotConfig(row)"><i class="fa fa-fw fa-refresh"></i>Reload</div></td>
                            <th>{{row.JackpotType}}</th>
                            <td><input type="number" class="form-control" min="0" ng-model="row.Ratio" /></td>
                            <td><input type="number" class="form-control" min="0" ng-model="row.Goal"  /></td>
                            <td><input type="number" class="form-control" min="0" ng-model="row.Base"  /></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    }
    @helper tab4(popups.EditControl edit)
    {
PlatformInfo row = ViewBag.row;
    <script type="text/javascript">
        $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
            var _defaults = $.n(@Html.JsonRaw(row.GetDefaultConfigSettings()));
            function rows_conv1(data, textStatus, jqXHR) {
                var result = {};
                data.forEach(function (row) {
                    if (!result.hasOwnProperty(row.Key1))
                        result[row.Key1] = {};
                    result[row.Key1][row.Key2] = row.Value;
                });
                console.log(result);
                return result;
            }
            function rows_conv2(data, jqXHR, settings) {
                var n = new Array();
                for (var key1 in data) {
                    for (var key2 in data[key1]) {
                        n.push({ Key1: key1, Key2: key2, Value: data[key1][key2] });
                    }
                }
                return n;
            }

            var edit4 = new $.EditControl($.n(@edit), {
                OnLoading: function (data, jqXHR, settings) {
                    data.PlatformName = '@ViewBag.row.PlatformName';
                    settings.url = '@(Url.GetActionUrl<ConfigApiController>("platform_get"))';
                },
                OnLoadComplete: rows_conv1,
                OnUpdate: function (data, jqXHR, settings) {
                    settings.url = '@(Url.GetActionUrl<ConfigApiController>("platform_set"))';
                    return {
                        PlatformName: '@ViewBag.row.PlatformName',
                        Rows: rows_conv2(data, jqXHR, settings)
                    }
                },
                OnUpdateComplete: rows_conv1,
            });
            $('@ViewBag.tabs["d"].selector').on('show.bs.tab', function (e) {
                edit4.LoadData();
            });//.tab('show');
        });
    </script>
    }
    @helper tab4_Main(popups.EditControl edit)
    {
//PlatformInfo row = ViewBag.row;
//var n = row.GetDefaultConfigSettings();
@tab4(edit)
        <div class="col-sm-10 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.NumberInput("Platforms.Pokers", lang["PlatformID for Pokers"], min: 0, max: 100)
                    @edit.TextInput("Recog.PhotoDB", lang["PhotoDB  "])
                    @edit.TextInput("Recog.RecognitionApiUrl1", lang["Public RecognitionApiUrl  "])
                    @edit.TextInput("Recog.RecognitionApiUrl2", lang["Internal RecognitionApiUrl"])
                    @edit.NumberInput("Recog.DefaultSimilarity", lang["DefaultSimilarity"], min: 0, max: 100)
                    @edit.CheckBox("Recog.AlwaysPass", lang["Always Pass on Recognition"])
                    @edit.CheckBox("Recog.SampleAlwaysPass", lang["Always Pass on Sample"])
                    @edit.CheckBox("Recog.ActionAlwaysPass", lang["Always Pass on Action"])
                    @edit.CommandsEdit()
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab4_InnateGloryA(popups.EditControl edit)
    {
        @tab4(edit)
        <div class="col-sm-10 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.TextInput("GeniusBull.ApiUrl            ", lang["GameDB                    "])
                    @edit.TextInput("GeniusBull.LobbyUrl          ", lang["LobbyUrl                  "])
                    @edit.DropDownList2("GeniusBull.EnrtyLobby    ", lang["EnrtyLobby                "], langHelper.GetEnums2<GeniusBull.EntryLobby>())
                    @edit.TextInput("GeniusBull.NoticeApi         ", lang["NoticeApi                 "])
                    @edit.TextInput("GeniusBull.AssetServerUrl    ", lang["AssetServerUrl            "])
                    @edit.TextInput("GeniusBull.RecognitionApiUrl1", lang["Public RecognitionApiUrl  "])
                    @edit.TextInput("GeniusBull.RecognitionApiUrl2", lang["Internal RecognitionApiUrl"])
                    @edit.TextInput("GeniusBull.SlotServerRest    ", lang["SlotServerRest            "])
                    @edit.TextInput("GeniusBull.MjServerRest      ", lang["MjServerRest              "])
                    @edit.TextInput("GeniusBull.TexasHoldemRest   ", lang["TexasHoldemApi            "])
                    @edit.TextInput("GeniusBull.DoudizhuRest      ", lang["DoudizhuApi               "])
                    @edit.TextInput("GeniusBull.VideoReplay       ", lang["Video Replay              "])
                    @edit.TextInput("GeniusBull.MahjongReplay     ", lang["Mahjong Replay            "])
                    @edit.TextInput("GeniusBull.DoudizhuReplay    ", lang["Doudizhu Replay           "])
                    @edit.TextInput("GeniusBull.TexasHoldemReplay ", lang["TexasHoldem Replay        "])
                    @edit.CommandsEdit()
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab4_InnateGloryB(popups.EditControl edit)
    {
        <div class="col-sm-6 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab4_InnateGloryC(popups.EditControl edit)
    {
        <div class="col-sm-6 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
}
else
{
    popups.AddControl add = new popups.AddControl(this, grid);
    @section head {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                window.$grid1 = $scope['@grid.scope_id'] = $('#_grid1').jqxGridEx($.n(@grid), {
                    $scope: $scope,
                    columns: [{
                        name: '_popup1', get_url: function (data) {
                            return '@Url.Action("PlatformsDetails")?' + data.ID;
                        },
                    }],
                });
                var add = new $.EditControl($.n(@add), {
                    OnCreate: function () {
                        return {
                            PlatformType: '@PlatformType.InnateGloryA',
                            PlatformName: '',
                            Active: '@PlatformActiveState.Disabled',
                            Currency: '@CurrencyCode.TWD'
                        };
                    },
                    OnUpdate: function (data, jqXHR, settings) {
                        settings.url = '@(Url.GetActionUrl<PlatformsApiController>("add"))';
                    },
                    OnUpdateComplete: function (data, textStatus, jqXHR) {
                        $grid1.addrow(null, data, 'first');
                    },
                });
            });
        </script>
    }
    @helper tab_add(popups.AddControl add)
    {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">General</h3></div>
                <div class="panel-body">
                    @add.NumberInput("  ID          ", min: 1)
                    @add.PlatformType(" PlatformType")
                    @add.TextInput("    PlatformName")
                    @add.Currency("     Currency    ")
                    @add.PlatformActive("Active     ")
                    @add.CommandsAdd()
                </div>
            </div>
        </div>
        <div class="col-sm-6 hidden">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title"></h3></div>
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    <div id="toolbar" class="hidden">
        @add.button()
        @toolbars.GridRefresh(grid)
    </div>
    <div id="_grid1"></div>
    @modal_dialog
    @add.modal(() => tab_add(add))
}
