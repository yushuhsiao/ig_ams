@using jqx
@using ams
@using ams.Data
@using ams.Controllers;
@{
    popups.dialog modal_dialog = new popups.dialog(this, "_modal1");
    ViewBag.Title = "Games";
    jqxGrid grid = new jqxGrid<GameInfo>
    {
        page = this,
        scope_id = "grid1",
        showtoolbar = "#toolbar",
        source = { id = "ID", url = Url.GetActionUrl<GamesApiController>("list"), },
        pager = { pagesize = 1000, pageable = true },
        filter = { filterable = true, server_filtering = true, showfilterrow = true, showfiltermenuitems = false, },
        sorting = { sortable = true, server_sorting = true, },
        //editmode = editmode.selectedcell,
        selectionmode = selectionmode.singlerow,
        //selectedrowindex = 0,
        columns = new jqxGrid._column[] {
            new jqx_column.ActionPopup(this, "_popup1") { ButtonText = "Details", modal = modal_dialog, cellsalign = alignment.center },
            new jqx_column.ID1(this, "ID"),
            new jqx_column.GameClass(this),
            new jqx_column.GameName(this) { datafield = "Name", width = 150, cellsalign = alignment.left },
            new jqx_column.ver(this),
            new jqx_column._string(this, "Name_en ", lang["GameName(en) "]) { width = 150, cellsalign = alignment.left },
            new jqx_column._string(this, "Name_cht", lang["GameName(cht)"]) { width = 150, cellsalign = alignment.left },
            new jqx_column._string(this, "Name_chs", lang["GameName(chs)"]) { width = 150, cellsalign = alignment.left },
            new jqx_column.CreateTime(this), new jqx_column.CreateUser(this), new jqx_column.ModifyTime(this), new jqx_column.ModifyUser(this),
        }
    };
    widgets.layout_1(this, grid);
}
@if (IsDetails)
{
    GameInfo row = GameInfo.GetGameInfo(id: Request.QueryString.ToString().ToInt32() ?? 0);
    popups.EditControl edit1 = new popups.EditControl(this, "edit1") { grid = grid, row = row, updaterow = true };
    popups.EditControl edit2 = new popups.EditControl(this, "edit2") { };
    popups.EditControl edit3 = new popups.EditControl(this, "edit3") { };
    popups.nav_tabs tabs = new popups.nav_tabs(
        new popups.tab("a") { body = () => tab1(edit1), title = lang["General"] },
        new popups.tab("b") { body = () => tab2(edit2), title = lang["Games"] },
        new popups.tab("c") { body = () => tab3(edit3), title = lang["JackpotConfig"], Visible = false });
    @tabs
    @section head {
        @popups.popup_css()
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                var edit1 = new $.EditControl($.n(@edit1), {
                    OnUpdate: function (data, jqXHR, settings) {
                        settings.url = '@(Url.GetActionUrl<GamesApiController>("set"))';
                    }
                });
                var edit2 = new $.EditControl($.n(@edit2), {
                    OnUpdate: function (data, jqXHR, settings) {
                        //settings.url = '@(Url.GetActionUrl<GeniusBull.GeniusBullSysApiController>("set"))';
                    }
                });
                var edit3 = new $.EditControl($.n(@edit3), {
                    OnLoading: function (data, jqXHR, settings) {
                        data.PlatformName = $scope['@edit1.name'].Row.PlatformName;
                        settings.url = '@(Url.GetActionUrl<GeniusBull.GeniusBullSysApiController>("GetJackpotConfigList"))';
                    },
                });
                $('@tabs["b"].selector').on('show.bs.tab', function (e) {
                });
                $('@tabs["c"].selector').on('show.bs.tab', function (e) {
                });
            });
        </script>
    }
    @helper tab1(popups.EditControl edit) {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.GameClass("   GameClass")
                    @edit.NumberInput(" ID       ", min: 1, max: 0xffff)
                    @edit.TextInput("   Name     ")
                    @edit.CommandsEdit()
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.TextInput("Name_en  ")
                    @edit.TextInput("Name_cht ")
                    @edit.TextInput("Name_chs ")
                </div>
            </div>
        </div>
    }
    @helper tab2(popups.EditControl edit) {
        <div class="col-sm-12 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab3(popups.EditControl edit) {
        <div class="col-sm-12 col-sm-offset-0">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
}
else
{
    popups.AddControl add = new popups.AddControl(this, grid);
    @section head {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                window.$grid1 = $scope['@grid.scope_id'] = $('#_grid1').jqxGridEx($.n(@grid), {
                    $scope: $scope,
                    columns: [{
                        name: '_popup1', get_url: function (data) {
                            return '@Url.Action("GamesDetails")?' + data.ID;
                        },
                    }],
                });
            });
            var add = new $.EditControl($.n(@add), {
                OnCreate: function () {
                    return {
                        GameClass: '@GameClass.EGame',
                        GameID: 1,
                        Name: '',
                    };
                },
                OnUpdate: function (data, jqXHR, settings) {
                    settings.url = '@(Url.GetActionUrl<GamesApiController>("add"))';
                },
                OnUpdateComplete: function (data, textStatus, jqXHR) {
                    $grid1.addrow(null, data, 'first');
                },
            });
        </script>
    }
    @helper tab_add(jqxGrid grid, popups.AddControl add) {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">General</h3></div>
                <div class="panel-body">
                    @add.GameClass("  GameClass")
                    @add.NumberInput("ID       ", min: 1, max: 0xffff)
                    @add.TextInput("  Name     ")
                    @add.CommandsAdd()
                </div>
            </div>
        </div>
        <div class="col-sm-6 hidden">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title"></h3></div>
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    <div id="toolbar" class="hidden">
        @add.button()
        @toolbars.GridRefresh(grid)
    </div>
    <div id="_grid1"></div>
    @modal_dialog
    @add.modal(() => tab_add(grid, add))
}