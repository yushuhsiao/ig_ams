@using jqx
@using ams
@using ams.Data
@using ams.Controllers;
@{
    popups.dialog modal_dialog = new popups.dialog(this, "_modal1");
    ViewBag.Title = "Announce";
    jqxGrid grid = new jqxGrid<AnnounceItem>
    {
        page = this,
        scope_id = "grid1",
        showtoolbar = "#toolbar",
        source = { id = "ID", url = Url.GetActionUrl<AnnounceApiController>("list"), },
        pager = { pageable = true, server_paging = true, pagermode = pagermode.simple, },
        filter = { filterable = true, server_filtering = true, showfilterrow = true, showfiltermenuitems = false, },
        sorting = { sortable = true, server_sorting = true, },
        //editmode = editmode.selectedcell,
        selectionmode = selectionmode.singlerow,
        //selectedrowindex = 0,
        columns = new[] {
            new jqx_column.ActionPopup(this, "_popup1") { ButtonText = "Details", modal = modal_dialog, cellsalign = alignment.center },
            new jqxGrid._column { _datafield = { name = "sn         ", type = dataFieldType._number }, text = lang["sn          "], width = 100, hidden = true },
            new jqx_column.ver(this),
            new jqx_column.CorpID(this) { hidden = false },
            new jqx_column.CorpName(this),
            new jqx_column._number(this, "Order", lang["Order"]) { width = 50 },
            //new jqxGrid._column { _datafield = { name = "Order      ", type = dataFieldType._number }, text = lang["Order       "], width = 50 },
            new jqxGrid._column { _datafield = { name = "Active     ", type = dataFieldType._number }, text = lang["State       "], width = 050, columntype = columntype.checkbox },
            new jqx_column._string(this, "Text", lang["Text"]) { width = 300 },
            //new jqxGrid._column { _datafield = { name = "Text       ", type = dataFieldType._string }, text = lang["Text        "], width = 300 },
            new jqxGrid._columns.DateTime { _datafield = { name = "ActiveTime   " }, text = lang["ActiveTime    "], columntype = columntype.datetimeinput },
            new jqxGrid._columns.DateTime { _datafield = { name = "ExpireTime   " }, text = lang["ExpireTime    "], columntype = columntype.datetimeinput  },
            new jqx_column.DateTime(this, "ActiveTime", lang["ActiveTime"]),
            new jqx_column.DateTime(this, "ExpireTime", lang["ExpireTime"]),
            new jqx_column.CreateTime(this), new jqx_column.CreateUser(this), new jqx_column.ModifyTime(this), new jqx_column.ModifyUser(this),
        }
    };
    widgets.layout_1(this, grid);
    //widgets.layout_grid_detail(this, grid);
}
@if (IsDetails)
{
    AnnounceItem row = new AnnounceApiController()
    {
        CorpID = Request.QueryString["CorpID"].ToInt32(),
        sn = Request.QueryString["sn"].ToInt32()
    }.get(_empty.instance);

    popups.EditControl edit1 = new popups.EditControl(this, "edit1") { grid = grid, row = row, updaterow = true };
    popups.EditControl edit2 = new popups.EditControl(this, "edit2") { };
    popups.EditControl edit3 = new popups.EditControl(this, "edit3") { };
    popups.nav_tabs tabs = new popups.nav_tabs(
        new popups.tab("a") { body = () => tab1(edit1), title = lang["General"] },
        new popups.tab("b") { body = () => tab2(edit2), title = lang[""], Visible = false },
        new popups.tab("c") { body = () => tab3(edit3), title = lang[""], Visible = false });
    @tabs
    @section head {
        @popups.popup_css()
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                var edit1 = new $.EditControl($.n(@edit1), {
                    OnUpdate: function (data, jqXHR, settings) {
                        settings.url = '@(Url.GetActionUrl<AnnounceApiController>("set"))';
                    }
                });
                var edit2 = new $.EditControl($.n(@edit2), {
                    OnUpdate: function (data, jqXHR, settings) { }
                });
                var edit3 = new $.EditControl($.n(@edit3), {
                    OnLoading: function (data, jqXHR, settings) { }
                });
                $('@tabs["b"].selector').on('show.bs.tab', function (e) {
                });
                $('@tabs["c"].selector').on('show.bs.tab', function (e) {
                });
            });
        </script>
    }
    @helper tab1(popups.EditControl edit)
    {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    @edit.TextInput("  Text  ", lang["Text "])
                    @edit.NumberInput("Order ", lang["Order"])
                    @edit.CheckBox("   Active")
                    @edit.CommandsEdit()
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab2(popups.EditControl edit)
    {
        <div class="col-sm-12">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }
    @helper tab3(popups.EditControl edit)
    {
        <div class="col-sm-12">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>
            </div>
        </div>
    }

    @*@section head {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                    window.$grid1 = $scope['@grid.scope_id'] = $('#_grid1').jqxGridEx($.n(@grid), {
                        $scope: $scope,
                        ext: {
                            grps: {
                                '': {
                                    OnUpdate: function (rowid, rowdata, data, jqXHR, settings) {
                                        data.CorpName = $scope.select_corp;
                                        settings.url = '@(Url.GetActionUrl<AnnounceApiController>("set"))';
                                    },
                                },
                            },
                            formatData: function (data) {
                                data.CorpName = $scope.select_corp;
                            },
                            OnAddingRow: function (addRow) {
                                addRow(null, {
                                    CorpName: $scope.select_corp,
                                    Text: '',
                                    Order: null,
                                    Active: true,
                                    ActiveTime: null,
                                    ExpireTime: null,
                                });
                            },
                            OnAddRow: function (row, jqXHR, settings) {
                                settings.url = '@(Url.GetActionUrl<AnnounceApiController>("add"))';
                            },
                        },
                    });
                });
        </script>
    }
    @section add_form {
        <section class="container-fluid form-horizontal">
            <div class="row">
                <div class="col-sm-6">
                    <div class="panel panel-default">
                        <div class="panel-heading"><h3 class="panel-title">@lang["General"]</h3></div>
                        <div class="panel-body">
                            @widgets.TextInput(lang["Text           "], grid, "Text             ", addonly: true)
                            @widgets.NumberInput(lang["Order        "], grid, "Order            ", addonly: true)
                            @widgets.CheckBox("                     ", grid, "Active            ", addonly: true)
                            @widgets.CommandsAdd(grid)
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 hidden">
                    <div class="panel panel-default">
                        <div class="panel-heading"><h3 class="panel-title">@lang[""]</h3></div>
                        <div class="panel-body"></div>
                    </div>
                </div>
            </div>
            <div class="row hidden">
                <div class="col-sm-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
    @section edit_form {
        <section class="container-fluid form-horizontal">
            <ul class="nav nav-pills">
                <li class="active"><a href="" data-toggle="tab" data-target=".tab1">@lang["General"]</a></li>
                <li class="hidden"><a href="" data-toggle="tab" data-target=".tab2">@lang[""]</a></li>
                <li class="hidden"><a href="" data-toggle="tab" data-target=".tab3">@lang[""]</a></li>
                <li class="hidden"><a href="" data-toggle="tab" data-target=".tab4">@lang[""]</a></li>
                <li class="hidden"><a href="" data-toggle="tab" data-target=".tab5">@lang[""]</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab1 row tab-pane fade in active">
                    <div class="col-sm-6">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                @widgets.TextInput(lang["Text           "], grid, "Text             ")
                                @widgets.NumberInput(lang["Order        "], grid, "Order            ")
                                @widgets.CheckBox("                     ", grid, "Active            ")
                                @widgets.CommandsEdit(grid)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 hidden">
                        <div class="panel panel-default">
                            <div class="panel-body">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab2 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">2</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">2</div></div></div></div>
                <div class="tab3 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">3</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">3</div></div></div></div>
                <div class="tab4 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">4</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">4</div></div></div></div>
                <div class="tab5 row tab-pane fade"><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">5</div></div></div><div class="col-sm-6"><div class="panel panel-default"><div class="panel-body">5</div></div></div></div>
            </div>
        </section>
    }*@
}
else
{
    popups.AddControl add = new popups.AddControl(this, grid);
    @section head {
        <script type="text/javascript">
            $(document).on('ng-app-init', function (e, $scope, $compile, $http) {
                window.$grid1 = $scope['@grid.scope_id'] = $('#_grid1').jqxGridEx($.n(@grid), {
                    $scope: $scope,
                    columns: [{
                        name: '_popup1', get_url: function (data) {
                            return '@Url.Action("AnnouncesDetails")?CorpID=' + data.CorpID + '&sn=' + data.sn;
                        },
                    }],
                });
                var add = new $.EditControl($.n(@add), {
                    OnCreate: function () {
                        return {
                            CorpName: $grid1.getFilterValue("CorpName"),
                            Text: '',
                            Order: null,
                            Active: true,
                            ActiveTime: null,
                            ExpireTime: null,
                        };
                    },
                    OnUpdate: function (data, jqXHR, settings) {
                        if (data.Password1 === data.Password2)
                            data.Password = data.Password1;
                        settings.url = '@(Url.GetActionUrl<AnnounceApiController>("add"))';
                    },
                    OnUpdateComplete: function (data, textStatus, jqXHR) {
                        $grid1.addrow(null, data, 'first');
                    },
                });
            });
        </script>
    }
    @helper tab_add(jqxGrid grid, popups.AddControl add)
    {
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">@lang["General"]</h3></div>
                <div class="panel-body">
                    @add.TextInput("  Text  ", lang["Text           "])
                    @add.NumberInput("Order ", lang["Order        "])
                    @add.CheckBox("   Active")
                    @add.CommandsAdd()
                </div>
            </div>
        </div>
        <div class="col-sm-6 hidden">
            <div class="panel panel-default">
                <div class="panel-heading"><h3 class="panel-title">@lang[""]</h3></div>
                <div class="panel-body"></div>
            </div>
        </div>
    }
    <div id="toolbar" class="hidden">
        @add.button()
        @toolbars.GridRefresh(grid)
    </div>
    <div id="_grid1"></div>
    @modal_dialog
    @add.modal(() => tab_add(grid, add))
}